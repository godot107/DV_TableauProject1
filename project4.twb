<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='13' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='12.0'>
        <calculation class='tableau' formula='12.0' />
        <range max='100.0' min='1.0' />
      </column>
      <column caption='16' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='16.0'>
        <calculation class='tableau' formula='16.0' />
        <range max='100.0' min='1.0' />
      </column>
      <column caption='17' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='17.0'>
        <calculation class='tableau' formula='17.0' />
        <range max='100.0' min='1.0' />
      </column>
    </datasource>
    <datasource inline='true' name='ORDERS+ (DV_ORDERS)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='DV_ORDERS' server='129.152.144.84' service='PDB1.usuniversi01134.oraclecloud.internal' username='DV_ORDERS'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ORDERS].[CUSTOMER_ID]'>
              </expression>
              <expression op='[CUSTOMERS].[CUSTOMER_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[ORDER_DETAILS].[ITEM_ID]'>
                </expression>
                <expression op='[ITEMS].[ITEM_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[ORDERS].[ORDER_ID]'>
                  </expression>
                  <expression op='[ORDER_DETAILS].[ORDER_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation name='ORDERS' table='[DV_ORDERS].[ORDERS]' type='table' />
              <relation name='ORDER_DETAILS' table='[DV_ORDERS].[ORDER_DETAILS]' type='table' />
            </relation>
            <relation name='ITEMS' table='[DV_ORDERS].[ITEMS]' type='table' />
          </relation>
          <relation name='CUSTOMERS' table='[DV_ORDERS].[CUSTOMERS]' type='table' />
        </relation>
        <cols>
          <map key='[ARTIST]' value='[ITEMS].[ARTIST]' />
          <map key='[CUSTOMER_ADDRESS]' value='[CUSTOMERS].[CUSTOMER_ADDRESS]' />
          <map key='[CUSTOMER_CITY]' value='[CUSTOMERS].[CUSTOMER_CITY]' />
          <map key='[CUSTOMER_FAX]' value='[CUSTOMERS].[CUSTOMER_FAX]' />
          <map key='[CUSTOMER_FIRST_NAME]' value='[CUSTOMERS].[CUSTOMER_FIRST_NAME]' />
          <map key='[CUSTOMER_ID (CUSTOMERS)]' value='[CUSTOMERS].[CUSTOMER_ID]' />
          <map key='[CUSTOMER_ID]' value='[ORDERS].[CUSTOMER_ID]' />
          <map key='[CUSTOMER_LAST_NAME]' value='[CUSTOMERS].[CUSTOMER_LAST_NAME]' />
          <map key='[CUSTOMER_PHONE]' value='[CUSTOMERS].[CUSTOMER_PHONE]' />
          <map key='[CUSTOMER_STATE]' value='[CUSTOMERS].[CUSTOMER_STATE]' />
          <map key='[CUSTOMER_ZIP]' value='[CUSTOMERS].[CUSTOMER_ZIP]' />
          <map key='[ITEM_ID (ITEMS)]' value='[ITEMS].[ITEM_ID]' />
          <map key='[ITEM_ID]' value='[ORDER_DETAILS].[ITEM_ID]' />
          <map key='[ORDER_DATE]' value='[ORDERS].[ORDER_DATE]' />
          <map key='[ORDER_ID (ORDER_DETAILS)]' value='[ORDER_DETAILS].[ORDER_ID]' />
          <map key='[ORDER_ID]' value='[ORDERS].[ORDER_ID]' />
          <map key='[ORDER_QTY]' value='[ORDER_DETAILS].[ORDER_QTY]' />
          <map key='[SHIPPED_DATE]' value='[ORDERS].[SHIPPED_DATE]' />
          <map key='[TITLE]' value='[ITEMS].[TITLE]' />
          <map key='[UNIT_PRICE]' value='[ITEMS].[UNIT_PRICE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ORDER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ORDER_ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>ORDER_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CUSTOMER_ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>CUSTOMER_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ORDER_DATE]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>ORDER_DATE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SHIPPED_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[SHIPPED_DATE]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>SHIPPED_DATE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ORDER_ID (ORDER_DETAILS)]</local-name>
            <parent-name>[ORDER_DETAILS]</parent-name>
            <remote-alias>ORDER_ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITEM_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ITEM_ID]</local-name>
            <parent-name>[ORDER_DETAILS]</parent-name>
            <remote-alias>ITEM_ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORDER_QTY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ORDER_QTY]</local-name>
            <parent-name>[ORDER_DETAILS]</parent-name>
            <remote-alias>ORDER_QTY</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ITEM_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ITEM_ID (ITEMS)]</local-name>
            <parent-name>[ITEMS]</parent-name>
            <remote-alias>ITEM_ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TITLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TITLE]</local-name>
            <parent-name>[ITEMS]</parent-name>
            <remote-alias>TITLE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARTIST</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ARTIST]</local-name>
            <parent-name>[ITEMS]</parent-name>
            <remote-alias>ARTIST</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_PRICE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[UNIT_PRICE]</local-name>
            <parent-name>[ITEMS]</parent-name>
            <remote-alias>UNIT_PRICE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CUSTOMER_ID (CUSTOMERS)]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_ID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_FIRST_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_FIRST_NAME]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_FIRST_NAME</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_LAST_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_LAST_NAME]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_LAST_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_ADDRESS]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_ADDRESS</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>255</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_CITY]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_CITY</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_STATE]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_STATE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_AFC{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_ZIP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_ZIP]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_ZIP</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_PHONE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_PHONE]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_PHONE</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CUSTOMER_FAX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CUSTOMER_FAX]</local-name>
            <parent-name>[CUSTOMERS]</parent-name>
            <remote-alias>CUSTOMER_FAX</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Artist' datatype='string' name='[ARTIST]' role='dimension' type='nominal'>
      </column>
      <column caption='Customer Address' datatype='string' name='[CUSTOMER_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Customer City' datatype='string' name='[CUSTOMER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Customer Fax' datatype='string' name='[CUSTOMER_FAX]' role='dimension' type='nominal'>
      </column>
      <column caption='Customer First Name' datatype='string' name='[CUSTOMER_FIRST_NAME]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Customer Id (Customers)' datatype='real' name='[CUSTOMER_ID (CUSTOMERS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Customer Id' datatype='real' name='[CUSTOMER_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Customer Last Name' datatype='string' name='[CUSTOMER_LAST_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Customer Phone' datatype='string' name='[CUSTOMER_PHONE]' role='dimension' type='nominal'>
      </column>
      <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
      </column>
      <column caption='Customer Zip' datatype='string' name='[CUSTOMER_ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Item Id (Items)' datatype='real' name='[ITEM_ID (ITEMS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Item Id' datatype='real' name='[ITEM_ID]' role='dimension' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='Order Id (Order Details)' datatype='real' name='[ORDER_ID (ORDER_DETAILS)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Order Id' datatype='real' name='[ORDER_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Order Qty' datatype='real' name='[ORDER_QTY]' role='measure' type='quantitative'>
      </column>
      <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Title' datatype='string' name='[TITLE]' role='dimension' type='nominal'>
      </column>
      <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative'>
      </column>
      <column caption='Unit Price (bin)' datatype='integer' name='[Unit Price (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[UNIT_PRICE]' peg='0' size='1' />
      </column>
      <column-instance column='[TITLE]' derivation='None' name='[none:TITLE:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:TITLE:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Zone Out With Umami&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Burt Ruggles: An Intimate Portrait&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;More Songs About Structures and Comestibles&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Rude Noises&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;On The Road With Burt Ruggles&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;No Rest For The Weary&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Umami In Concert&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;No Fixed Address&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Race Car Sounds&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Etcetera&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Unit Price (bin)]' type='palette'>
            <map to='#17becf'>
              <bucket>17</bucket>
            </map>
            <map to='#26456e'>
              <bucket>1</bucket>
            </map>
            <map to='#80ff80'>
              <bucket>16</bucket>
            </map>
            <map to='#b4d4da'>
              <bucket>0</bucket>
            </map>
            <map to='#ff80c0'>
              <bucket>13</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Customers'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer City' datatype='string' name='[CUSTOMER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Customer First Name' datatype='string' name='[CUSTOMER_FIRST_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Customer Last Name' datatype='string' name='[CUSTOMER_LAST_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Customer Zip' datatype='string' name='[CUSTOMER_ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
            </column>
            <column-instance column='[CUSTOMER_CITY]' derivation='None' name='[none:CUSTOMER_CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUSTOMER_FIRST_NAME]' derivation='None' name='[none:CUSTOMER_FIRST_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUSTOMER_LAST_NAME]' derivation='None' name='[none:CUSTOMER_LAST_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUSTOMER_ZIP]' derivation='None' name='[none:CUSTOMER_ZIP:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_CITY:nk]' />
              <lod column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_ZIP:nk]' />
              <lod column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_FIRST_NAME:nk]' />
              <lod column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_LAST_NAME:nk]' />
              <lod column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]' />
              <geometry column='[ORDERS+ (DV_ORDERS)].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[Latitude (generated)]</rows>
        <cols>[ORDERS+ (DV_ORDERS)].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Figure 1-1'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative'>
            </column>
            <column caption='Unit Price (bin)' datatype='integer' name='[Unit Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[UNIT_PRICE]' peg='0' size='1' />
            </column>
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='None' name='[none:ORDER_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SHIPPED_DATE]' derivation='None' name='[none:SHIPPED_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;IA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</column>
            <column>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</rows>
        <cols>([ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk] * [ORDERS+ (DV_ORDERS)].[none:ORDER_DATE:qk])</cols>
        <show-full-range>
          <column>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Figure 1-2'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative'>
            </column>
            <column caption='Unit Price (bin)' datatype='integer' name='[Unit Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[UNIT_PRICE]' peg='0' size='1' />
            </column>
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='None' name='[none:ORDER_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SHIPPED_DATE]' derivation='None' name='[none:SHIPPED_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;NY&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</column>
            <column>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</rows>
        <cols>([ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk] * [ORDERS+ (DV_ORDERS)].[none:ORDER_DATE:qk])</cols>
        <show-full-range>
          <column>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Figure 1-3'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Unit Price' datatype='real' name='[UNIT_PRICE]' role='measure' type='quantitative'>
            </column>
            <column caption='Unit Price (bin)' datatype='integer' name='[Unit Price (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[UNIT_PRICE]' peg='0' size='1' />
            </column>
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='None' name='[none:ORDER_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SHIPPED_DATE]' derivation='None' name='[none:SHIPPED_DATE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;WI&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</column>
            <column>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</rows>
        <cols>([ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk] * [ORDERS+ (DV_ORDERS)].[none:ORDER_DATE:qk])</cols>
        <show-full-range>
          <column>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Figure 2-1'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Title' datatype='string' name='[TITLE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='None' name='[none:ORDER_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SHIPPED_DATE]' derivation='None' name='[none:SHIPPED_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TITLE]' derivation='None' name='[none:TITLE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;IA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]' included-values='in-range'>
            <min>#2012-10-28 00:00:00#</min>
            <max>#2014-07-31 00:00:00#</max>
          </filter>
          <slices>
            <column>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</column>
            <column>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</rows>
        <cols>([ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk] * [ORDERS+ (DV_ORDERS)].[none:ORDER_DATE:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Figure 2-2'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Title' datatype='string' name='[TITLE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='None' name='[none:ORDER_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SHIPPED_DATE]' derivation='None' name='[none:SHIPPED_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TITLE]' derivation='None' name='[none:TITLE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;NY&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]' included-values='in-range'>
            <min>#2012-10-28 00:00:00#</min>
            <max>#2014-07-31 00:00:00#</max>
          </filter>
          <slices>
            <column>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</column>
            <column>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</rows>
        <cols>([ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk] * [ORDERS+ (DV_ORDERS)].[none:ORDER_DATE:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Figure 2-3'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Title' datatype='string' name='[TITLE]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_DATE]' derivation='None' name='[none:ORDER_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SHIPPED_DATE]' derivation='None' name='[none:SHIPPED_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TITLE]' derivation='None' name='[none:TITLE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:CUSTOMER_STATE:nk]' member='&quot;WI&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]' included-values='in-range'>
            <min>#2012-10-28 00:00:00#</min>
            <max>#2014-07-31 00:00:00#</max>
          </filter>
          <slices>
            <column>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</column>
            <column>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</rows>
        <cols>([ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk] * [ORDERS+ (DV_ORDERS)].[none:ORDER_DATE:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Order Details'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column aggregation='Sum' caption='Item Id' datatype='real' name='[ITEM_ID]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Order Id (Order Details)' datatype='real' name='[ORDER_ID (ORDER_DETAILS)]' role='dimension' type='quantitative'>
            </column>
            <column-instance column='[ITEM_ID]' derivation='None' name='[none:ITEM_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORDER_ID (ORDER_DETAILS)]' derivation='None' name='[none:ORDER_ID (ORDER_DETAILS):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[none:ORDER_ID (ORDER_DETAILS):qk]</rows>
        <cols>[ORDERS+ (DV_ORDERS)].[none:ITEM_ID:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Orders'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column aggregation='Sum' caption='Customer Id' datatype='real' name='[CUSTOMER_ID]' role='dimension' type='quantitative'>
            </column>
            <column caption='Order Date' datatype='datetime' name='[ORDER_DATE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Shipped Date' datatype='datetime' datatype-customized='true' name='[SHIPPED_DATE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ORDER_DATE]' derivation='Day' name='[dy:ORDER_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ORDER_DATE]' derivation='Month' name='[mn:ORDER_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SHIPPED_DATE]' derivation='Month' name='[mn:SHIPPED_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CUSTOMER_ID]' derivation='None' name='[none:CUSTOMER_ID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[ORDERS+ (DV_ORDERS)].[mn:ORDER_DATE:ok]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[mn:SHIPPED_DATE:ok]</rows>
        <cols>[ORDERS+ (DV_ORDERS)].[dy:ORDER_DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Table'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Artist' datatype='string' name='[ARTIST]' role='dimension' type='nominal'>
            </column>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Qty' datatype='real' name='[ORDER_QTY]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ARTIST]' derivation='None' name='[none:ARTIST:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_QTY]' derivation='Sum' name='[sum:ORDER_QTY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[none:ARTIST:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[ORDERS+ (DV_ORDERS)].[sum:ORDER_QTY:qk]</rows>
        <cols>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Table2'>
      <table>
        <view>
          <datasources>
            <datasource name='ORDERS+ (DV_ORDERS)' />
          </datasources>
          <datasource-dependencies datasource='ORDERS+ (DV_ORDERS)'>
            <column caption='Artist' datatype='string' name='[ARTIST]' role='dimension' type='nominal'>
            </column>
            <column caption='Customer State' datatype='string' name='[CUSTOMER_STATE]' role='dimension' type='nominal'>
            </column>
            <column caption='Order Qty' datatype='real' name='[ORDER_QTY]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ARTIST]' derivation='None' name='[none:ARTIST:nk]' pivot='key' type='nominal' />
            <column-instance column='[CUSTOMER_STATE]' derivation='None' name='[none:CUSTOMER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORDER_QTY]' derivation='Sum' name='[sum:ORDER_QTY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[ORDERS+ (DV_ORDERS)].[none:ARTIST:nk]' />
              <wedge-size column='[ORDERS+ (DV_ORDERS)].[sum:ORDER_QTY:qk]' />
              <size column='[ORDERS+ (DV_ORDERS)].[sum:ORDER_QTY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Figure 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='36875' id='1' name='Figure 1-1' show-title='true' w='84000' x='0' y='0'>
              </zone>
              <zone h='38125' id='10' name='Figure 1-2' show-title='true' w='84000' x='0' y='36875'>
              </zone>
              <zone h='25000' id='11' name='Figure 1-3' show-title='true' w='84000' x='0' y='75000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='10875' id='6' name='Figure 1-1' pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' type='color' w='16000' x='84000' y='0'>
              </zone>
              <zone h='6000' id='7' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='10875'>
              </zone>
              <zone h='8875' id='8' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='84000' y='16875'>
              </zone>
              <zone h='8875' id='9' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='84000' y='25750'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Figure 2'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Figure 2-1' show-title='true' w='84000' x='0' y='0'>
              </zone>
              <zone h='25000' id='7' name='Figure 2-2' show-title='true' w='84000' x='0' y='50000'>
              </zone>
              <zone h='25000' id='8' name='Figure 2-3' show-title='true' w='84000' x='0' y='75000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='28375' id='6' name='Figure 2-1' pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' type='color' w='16000' x='84000' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Orders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[dy:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[mn:SHIPPED_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_ID:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[tyr:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_CITY:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_FIRST_NAME:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_LAST_NAME:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_ZIP:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Order Details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:ITEM_ID:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:ORDER_ID (ORDER_DETAILS):qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:ARTIST:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:ARTIST:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Table2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:ARTIST:nk]' type='color' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[sum:ORDER_QTY:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:ARTIST:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Figure 1-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</field>
          <field>[ORDERS+ (DV_ORDERS)].[mn:SHIPPED_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:UNIT_PRICE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Figure 1-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</field>
          <field>[ORDERS+ (DV_ORDERS)].[mn:SHIPPED_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:UNIT_PRICE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Figure 1'>
      <zones>
        <zone name='Figure 1-1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Figure 1-2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Figure 1-3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Figure 1-1' pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' type='color' />
        <zone mode='type_in' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Figure 2-1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Figure 2-2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Figure 2-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Figure 2'>
      <zones>
        <zone name='Figure 2-1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Figure 2-2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Figure 2-3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Figure 2-1' pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[none:TITLE:nk]' type='color' />
      </zones>
    </window>
    <window class='hidden-worksheet' name='Figure 1-3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[ORDERS+ (DV_ORDERS)].[Unit Price (bin)]</field>
          <field>[ORDERS+ (DV_ORDERS)].[mn:SHIPPED_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:CUSTOMER_STATE:nk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:SHIPPED_DATE:qk]</field>
          <field>[ORDERS+ (DV_ORDERS)].[none:UNIT_PRICE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:ORDER_DATE:ok]</field>
          <field>[ORDERS+ (DV_ORDERS)].[yr:SHIPPED_DATE:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Orders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Customers' width='192'>
      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
      /weKPLEol8LQ+wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Order Details' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Table' width='192'>
      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
      6R/t1jAJsAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Table2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Figure 1-1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Figure 1-2' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Figure 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Figure 2-1' width='192'>
      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
      s5L/RgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Figure 2-2' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Figure 2-3' width='192'>
      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
      6BVg+2LWMDC0RrP56ZCb3zcwjOcveOXTI0U72DcA2i1z4fJNDMPgtZODRCMwOVvme7/1DX79
      6SV++MMfYgArsw+ZLWksu0hZJfjuu9/A9/2GJvBmNIW3U02gbca61cIYZM1WeazUjh1O9g+A
      UyHZc5Kcn2d6bpl3zg3Slc0SiSUY6O3evl13/zDL1Xm6e3sYzPTtugtAM3YFaKeaO/8Nsm7Q
      NXfWDrJWqzxWOx+LfQNgpvo5mZ2mxhDvDfp4Vpr+XA2AU2deZ31+huTgKZKxBCeH+pidniZt
      pujLZXAcp6EJXCkVeFN4u9Tc0g5j3XpSBVl36690Kxz/1l//SCRy9F0h9lIqlRreC/B9P/A7
      oF1qbj0BTDPYeYdmjLUZdbdOVVrhsfI8b3vLnqZPg+7cssJ1XRIvmO93HAfLsr72/+1VUymF
      7/u7bptx2Jp7/dzWZlK7vQHoui7w4j1smnH8h62ptcbzvK891r1qKqVwHGfXmns9TvvVPczx
      G4YR3L5Ae/nqvkC2bQfeJdYuNfcKx1E0Y6xaa1zXfeGT7jD2e5If1mGOf+e+QE1/H8Ctl7lz
      9x6Ot/kLq5UKGvDsOtW6s3kjrSmVilQ2VnkwNcuLErlRLD73PcuKUSqVt7+uFUs4vsv4+AN8
      tX+2C4XCc7/PsmKUis9q2pUitusyPvYA7yB/L5TPxtMxlTbyeAq05+L6zy6+SqUitdI6UzPz
      +9cD7MoGd0bH8Z4eU6VSASBmeJRt/1ndYolqcZ2pmYUX3o87lYtF/F2Oya3bbC1l1NqjVKqi
      PZtCsbpvzUKh8NzKFsMwqNXr219r5VAq1/GdKhuVg/WObz3+nlOlWKmjtcKx3e3/tytFbB/K
      hQLOfo+TVty9d7/5Afjy7n3OnzvBtYsXuXD1C65fuUzV9Zm6f4snq5tPEuXWuXT1Or6OUims
      8KI1pJOTE4xc/BXXLl3kf359gaV8lfL6AjdHJ5/eQnHz4iU2XIfy8iwLRWfPsSmnzM1r15mY
      mODihQtcuTLC46U8lcIiN+883L7dnSsXWas61NdnmMvvXRMA3+b255eZnpnls0sj1FzN5L2b
      zD89Xt+ucmXkC1zPZ+LhgwM9Ue+OjnP+TD/XLl/k4tWbXL38KXUPpu9eZS6/+SRQXp0rVz+n
      5mlmJsbwD1D4yfQ0Y/dv88mlz7l04f+4PToB2mPksyt4T2+zvjTFvfEnPBy9zv3ppb0Lap+p
      0S+YmH7MhYsXuHb5IrfGZ1BulUtXb2zfbPnRKOMz64zf+IwH8xsHuAdgcuohY2Pj3Ls1wuP5
      dSqFpcbH6epF8rU6F37xK8r7/PF7ND7KmZMDzQ9AMmby8MEkaIWvDTKdnRjAwNAwERTlUgXT
      SjLYl2N96RHrFX/XQd25dZ2a47K4uMz84ylyfQOUilUyuT4yyRjlUhkwGR4eRPse0UScaqW2
      59jmHk1jpTu4f/s2ru+wtLRBT0+OdK6XzmSccmlz89/h4WGU72EkU9g7Xhle5NrIZcyIyYPx
      +5SrLmAwMDSM+fR4o4kU/T1Z7GoVy4zh7lsR4lF4MDFNxFB42iTTmcVAMzw8DNqjVKkRiSUZ
      6Mvh1MpYcQvH2/tJsL4wzdjcCutLSywvLqFiHWingmHGGBrsp14q42lNz+AgcTTVukNpl1fh
      nTZWnrDhx5mZuEe55rC8vEBXdy8RK8VAXxel8ub9NzA8jOm71FyP4j41AR7cu81GxWVxbpr5
      lXUA0rkeOpPWs8dpaBinVkYZmuI+r1QdqQ4mJ6ebfw2QSnXgupsXVJ7nYZomhmlioNEaCoUN
      urtzT6emfHxfY8Utvvo+su97aEy08jCMrRoGpgFKawqFAt3d3SilMAxje8/Ivd6R3rptfn4W
      pyNHX2cHphnBMDRKHa4mgOe6mJEInu9hGiaRSBRQzx0vaHxfE4vtf12glcLxPKxYDM/zMU0w
      zMjm/ag8CiWb7q5MQ91oLPrc/dhQU6vNWoaBAkzDwDAMTNNEKUW1UMDK5bAMUEpv3k7rPWey
      tu4rr1bk0XKZsycHMUxz82eV2r5P0RqlwTQ0ShuYu20u21DXZ/PQFDwdo2kauzxOJlpvjuFF
      j9PWNYCxubLh5V0EC9EKAt0cVwREe4xcuoyHydCpk0Q1PBib4p3336TuRPEqa5w8d5ZPfvkx
      iWyON86epGL7zMzOcna4j+zgabrSsqT865LVoK1C14gk+jk/1Mm1LydYX12hM9vBFzduMDk5
      ycLKKjET+ofP0NeVYPzBBHfuj9OVUdy4/iVT03PHfQRtSV4BWoWZYagvymrd4nsf9JOJGzyc
      WeXddwaoujHSiQiGEcVUFczkAOfOpCm5MZKWJvVuF7mhweM+grb0//3fWyiXWzRnAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Figure 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAfIElEQVR4nO2deXCc533fP3vfiz2wuziIiwRJiZckSqYkW5ItRUosyXZrO7bb2FFs185M
      zolcp81Mpq3TZsZpZxrZtZ02rtNJPM5YDq04iUWJsRlbFilKPECRAHEQ97XYXSyw9332D4gQ
      lwTBxe4CLxb7fGYw2OP9Pe/3fd73t8/9e2TFYrGIQNCgyKUWIBBIiXAAQUOz6gAXzpzi+PHj
      DA+P4AnEyzKeHR/kx6+cIltYeV8s5JiYmN4MnQLBpqC8/mKgv5+WfcdIB+YY9fs5OTFGe1s7
      zt2HCC2M4Z4coffAUWamp3B09vL4w/djc3Wi7B/AHwiQSiTJhuY4N7TInj3dEl6SQFA+qyWA
      psnJM08+gkmnJhgMcnVkCqNWzsCVt5mY8VJUm+hokvHG+T4WfAEAludGmA4VKKaTAOw/ch96
      hTQXIhBUwmoJ8OSTTwHQtvce5NpJLp5/i5jayUNHdBjMFhSyIi6Xky/9ThMaswMAbZOLxx7U
      YzDbaDfpgALvf/97JbkQgaASZKIbVNDIiF4gQUMjHEDQ0CjvfIhAavovXQCNCafNQjIaIClT
      EVr0odPq0RkNpBIJTCYzcq2KRDhDi6nA2eE5rAYdLqeNVMhDUteJzaimt6dD6svZVggHqBMy
      mSwTYyNkUnG8CTm7bUUCwTTRcIb9LWZGr55D4WjDqetA1WrBrp4ikpOTGB8ll0kQI4XfaBIO
      cBOiESxoaGreBshkMrVOcssQ2qVBSu01d4BsNlvrJLcMoV0apNReN22AhelxIgUNxbCbhNrB
      /Qf3SC2pbK43Ys2aPAVNM7s7XFJLKpuf/eQEpuY2CskE1tZd7NvdJbWk8kn7GZxO4F/08oFH
      H1zzkLrpBl3w+fAuzDDnCeC0maSWs2EymQxe3zIL87NSS9k4MhkA2Uz9lTLT45OoZGk8oeSa
      39e8ERyPxzEYDLVMcssQ2qVBSu01rwJls1ni8fKmU2830um01BIqRmivjJo6QD6fR6FQ3Nab
      c7kcSuXmNTtqkb7QvnHqWXtN2wAKhQK5vG6aFQJB/TSCN4NkLIhv+prUMgQSUlMHyOfzFAqF
      Wia5qfztH/8B3/uP/56hMz+RWsqGyGYy/Oi/v8Q3P/f7zA1clVpOXdPYVSDZTf/rhMHTsyxM
      WUH1y/imxqWWszHCbvjBr8P5/yu1EqCOBsI2g0//6deJLvlwdu+XWsqGcHaZUOvytOy2cM9T
      D0gtZ2MM/j0M/xNM/AyOfVFqNbXvBdruVaB0Ps1Loy9xqPkQRxxH0BktUksqm5xvAtnVl3Ae
      /jhffOEpqeVUxqGPwfwF6HlMaiVAjR2gHqpAL42+xFfPfxWLxsLpf3NaajkbIvrKn7A41cee
      ufPw2R9KLacyzO3wye9KrWKVhqsCHWo+hEVj4b1t9bd4/1fnP8FE5lP8L1Ocj0gtZofQcFWg
      I44jdffLv4pMCeSR77pfaiU7hoarAtUjfeE4V6IJvv+7jxIIJ7mryyG1pB1Dw1WB6pHP9E8S
      zOVhbzufFw9/TWnogbB64PSJf+S5v/wvPDJygXvNeqnl7DgaeyCsDvAMXUWdzfDJ+CJHzfU5
      3Xk7c8endX5+vuR9sZBjdtZ9/Q0zs7Nk40EWFiObIrBRecv9Or/1k3+H8Vfu5tivfY5f+uxv
      Si1pR7JuGyC+NMO/vHaR3j1zyJVZEmEtjz16mHA4DLRTyGUJhsPMTl5Gpd9Pk0FBLpcjl8ut
      mV4+n9+Ma6hZ+oVCYdto/+urf8Mb3vMAfOPZvwS4rTbYXto3ipTa13WAlMzIc//2GU688nPu
      Orwf4y4rKo2OFpeDxcVFnE4n7S0uHIf34V9MYzAYiMfj687f3sy53dWmL5fLt432zx36LHK5
      jN84+BtlnXc7ad8oUmrf0iWR231hhtBeGfWsXfQCCRoa0Qu0jUheucLoQw/j/vKXpZayYdKz
      ERb+65ssf39EaikbQjyt24jkwFXyoRDxN85KLWXDZOdjFBI50mNBqaVsiIabC7SdsXziV0EG
      usOHpZayYQzvaQFA3VFfMZvEXCApCbtXFogc+hjoXcg1Gmyf/rTUqipCppJjfG+b1DI2jJgL
      JCUn/2hlddT8BfjY/5NaTUMieoGkpOcxUBu3zeqoRkRUgaTk2BffXRe7ziivYPMoeVoTQT8X
      +y6wGEhIpUcg2FJKHCCbShGOR0inK4sCvNVVoO+enea3vteHJ7x25F+B4E6UOMCS38v8zAKo
      KqvGbHUV6M9OjvDqVS8vX/Fs2TkF9Us4fJnXTz/A1cE/WP2spA1gtzvp7AqRSdZHffSPnr6L
      NyeW+fA9rVJLEdQBkWg/2WyQQODM6mclDuANhnBY7Bj06opOsNVVoOce7ua5h7u37HyC+qat
      7VOADLPpyOpnJQ6QSCTQGrXEwnGwb3z1kegFEmxnFHINHbt+veSzEgc4euzhki8ziQgjE9Ps
      6tqLzawjEAhgtZiZm/fR2dlOsZhnbs5DIRNDZ23BZa+fKGsCAdzkANf63iRYlNHs3Etvp53x
      qVkOHT7C6Zf/AfNd9xD3ennwPfeurgjLZ7OEwmH2drcxNreIUasSK8IqRGjfBivCevb1MvjP
      r7Nn/1EAens6uTrQz/6jx1iOZ2ju2nXLirDWFic+3yIul0usCKsSob32ad+JkpQLeRmZXAbe
      8Tq13syRwysNhpYbjnM4341N43A4cDhErBpBfVLSYo2H/LR2tDI0WtlWnmIukKDeKCkBtCYb
      em2M9s7KprWKXiBBvVHytEZCS8zPzjI9tyCVHoFgSylxAKPZRmdPLwf3dVWUmKgCvYs/GuPy
      nE9qGYI7UDoXaNmPXK5EJqts0yxRBXqXD3/zNf71ty7ygwujUksRrEPJ05pBTTbmIRgSsysr
      JRteZvSDT1Dw+YCahlwSbAIljWCNIk97x340Rm1FiYkqEMje+g4t7YP8xbmvk//ad3jwPfuk
      liRYhxIH6N57sKrERBUIlH1fx9yR4tBTv4T2wWNSyxHcAbEovgZ4Yh6QQauhFZ78E5g+jfaD
      fyi1LEEZiLhAVeKJefjQjz4EMnj5oy/TeuM6X8G2R4RGrBbZyp+s3rabFwCiClQ1rYZWXv7o
      y6uvBfWFiAtUBblsnv6fzyNf1IuHv04RVaAqGDrj4fQPRnn5W/1SSxFUSFV7hBWLeWZn55ke
      H8G3HNochdsYpUqOUi2n44BNaimCClm3DRD2jPOzM0Ps65mjKL91j7BGXhE2ccnPz783grVV
      zxPP7V93/65yqOdVVfWsfV0HyKmtfOZjT/DqT99g/8HeNfcIa9QVYQqFAljp/anVNdXrqqpq
      0xd7hNWIrd6rankhhtGqRaOr/prqeZ+tetYuBsKqwN5mlFqCoEpEL5CgoRFPq6ChEQNhZeKL
      +3j+ted5ceRFqaUIaoioApVBLhfhH0b+ilMzp3ih7wWp5QhqiJgLVAYXL36ClsgED9v38UTv
      c1LLEdQQ0QtUJhZlkf927+/icj4jtRRBDRF7hJXBAw/8kHh8nqamu6WWIqgxO+9p3QSUShMG
      w16pZQg2AdELJGhoRC/QbQi+/jcMvvhVIpGI1FIEm4joBVqD3PwA1p/9PlZgouMI5vc9K7Uk
      wSYheoHWQGbpIGveSxFoPyBCm+xk1nWA6LKPCbcPi8WKRqPF7/NxYH8PQ+NzHDl4F4VMkv7R
      KSxaBWk07O/t3hFVIIXRguJLF6WWIdgC1n1a/UvL7O7dy+j5cwSzBZRKBUqNAZVs5Vdertah
      URQxmk3YbGJVlKD+WH89QLHI1MQ4bZ2dLAciaFRy7HY78XiceDyO0+kkHo+zvLiAymDHbNCQ
      y+VuO7c7n8+vLiTZDKpNP5lMotPpNiXtOyG0S6O95gtiQqGVtcEqlYpsNlvyP51Oo9Fobvm8
      Vv9vTP92Gtb7XygUkMvlkmu/+ftyrqVQKKDRaABEvm/gf817gVQq1W1LAJVKhVpd2Sbc5Z67
      mvTXW5kktN+eeta+6d2g7tlJ0nkI+ZfYc/ddLIfCLM3PsufwfehV1TeYR4f7UamNBBJpuqx6
      dC1dLM3P0NVd2SYfNxJa9jHnC6OTZzDaWsmkkjXdE9k9O0m6qCC66KNj737SoRiyRBRrdxea
      WqQt8n1Nbsz3Te+yaW1tIxOcw2BpYnopRmgpgsOmxR9I1CT99rZdTLk9GJUQCy3hXZjh1C/O
      U12MhhUsdidalYysTInfM0soHMblcuHzLdYg9ZW8KUa9qJssTHsDhBa9nHr1nwnG0zVJW+T7
      2tyY75vuABPjY+gdPcRCEfZ1OGluNhGI5LGZK9uD4GbGxsbY29lOPC/D0dZJS1sXH3n6AzUp
      2pbc08RzclTFHI72nhsiYDhrkPpK3qisu8iEQ+zd3U6zq4WPfPyjWA3V/v6LfF+PG/N9S6NC
      bHeEdmmQUvu2nAoxcW2QUCxDW5uTQgGiiRRatQqDWo7Z4aTv7Dmsre3olUWi8RjNzS50RgtN
      Fe5sU0tmp8YIhiJYne0oyBOIxDDrtJiNWpQGK6P9F1HorTgtOiLhGKbmZjQaA81Wk9TSGzLf
      t6UDxFN5Wkxyrkx6aTOpCEwPEpTZaXLaeLzFgbW5lUzcx/zUPGFjBw7vFczOTu47Iv18/VA0
      wZ5dNk68Oczd3XaywSkuBuRozA6efcKJzmQll8swOT7Bgg+a2/wYjTaarfdILb0h831bVoGS
      0RD+SBprk55MIgYqPdFwGHuzFZPRwNjwMI6OHqLLPjQaHfliEb3JWvUvUS20Z1NxZr0BXHYL
      xVyaeE5OOh7BZm/GZDIyOzmGpslBNhFFr1WRzhVRag04rGbJtTdivtfcAVKpFFqt9EViJQjt
      0iCl9po7gEBQT9T/1E2BoAqEAwgamlUHuHDmFMePH2d4eARPIF6W8ez4ID9+5RTZd9bADPad
      5dTpC5siVCDYDFa7QQf6+2nZd4x0YI5Rv5+TE2O0t7Xj3H2I0MIY7skReg8cZWZ6CkdnL48/
      fD82VyfK/gH8gQCpRJLOfYcZOHECeI+ElyQQlM9qCaBpcvLMk49g0qkJBoNcHZnCqJUzcOVt
      Jma8FNUmOppkvHG+jwVfAIDluRGmQwWK6SQAIxf+hYLWRjJT/8siBY3Bagnw5JNPAdC29x7k
      2kkunn+LmNrJQ0d0GMwWFLIiLpeTL/1OExqzAwBtk4vHHtRjMNtoN+lQ5hLokxlprkQgqADR
      DSpoaEQvkKChEQ4gaGi25WQ4QSkXz72BwdqKxawmshxCrlbgcS9htDdjUuWJJZKYLE7UZEjI
      DKhTPia8KXQ6Gc4mHYveMM2d7ei0BrraW6S+nG2FcIA6QAZkshnGRsaIhRMUDBbk4SDZfJGM
      zYhJV+DtM2/haDHgOPAYZn0R2dQARZOLsZFBUhkdwUQIk22XcICbEI1gQUNT8zZAJlO/3aBC
      uzRIqb3mDnA9Nkw9IrRLg5Ta66INMDnUT15vYLT/EgpdGy2tNu49JP0qpHI5ceLHdO/uJhaI
      YG3dxb7d1YcO2SpOvXqC5l3d3LvPydA8HNjjkFpS2bx64gS7urtRywGlnv17e245pi66QYuo
      GB0awt7cBIBMJpNY0cbobGvG7VmZPpLN1NcvdXtHJ555N5cvXUatrT5axVbS0dnGvNuHIl+k
      s/fWhx82oREsohNIg9BeGTWvAqVSqVonuWWk09UHpJIKob0yauoAmUxm3dig5ZDL5VAqK5O1
      EdtcNs/g6TmaWuJ0Hzi4+rlGo9mS82+GfT3k++2QKt9vagMUiUYiVFop2swgprVm6IyHM383
      ycn/M04sNiq1nLLJXjrOwufex8iTT5IJBqWWU/eUOEBgepRXf/oKI9MBqfRsGa5uExqDDMee
      NFptq9RyyiI3P4Dqn75AW9dV1NFpMgtuqSXVPSXlxnI4hrOlHZu5sl/yeuqLdvU08YX/+bjU
      MjbE9b3LAKz/+Y8xHjwksaL6p8QBmm12RtxzRBMZXPaNJ6ZSqUgmk7XSJriJG/cus0qsZadQ
      UgXKywsUskpsNqNUegSCLaWkBPAGEnz46YcYmVrGtn/terF7dpKFhTnC4QSunoPkMzHic7Mc
      fvqDVBfcTyDYekocoMmoZWTcR1vnntsaxMIBNAYThBIYLXZS/iW8sQTRSAKFokihUCCXq3yb
      hHw+L4ktQKFQkPT81diLfK+MEgeQyyCTycE6Uw32H35g5cXhdz5wHuXug0dXv49EIlX3CVdj
      X42tXC5HoVBIdv5q7OVyucj3Ss594xujWkWWDOFI/Y4qCgSx2DVyuUhZx5Y4gFIpZ3p0EhSV
      zZGr5znpgp2B1/djzp1/hgsXP17W8SVPukypwdHiRKuszAHqaSRYsDPRaTtQqayYTOWNkZRW
      nORFsuks3kUfLtva00cFgu1MU9O9PPboxbKPL/mpT4YCqPVqQpHKqjKiCiSoN0qrQDozyqKC
      u3rbKkpMVIEE9UaJA/imx1hKZJHL62KhmGADeONenn/teV4ceVFqKduKkifd3nM3BzocaCtc
      +lZPk+EajZPTJzk1c4oX+l6QWkpZbKQrsxpKHGBucoRkOonbXdk8c5VKVRNR24Erbj/L8YTU
      MmrG091P81TXUzx///NSS7kjPt8Jzp1/hot9n9z0c5X0At137FGKxSJyheK2Bu7ZSQKRKLHl
      IM3de5AVIOqZouu+R7DpdkbV6filCf7w70Zot8l54z88LbWcmuAyuPjzD/y51DLKYwuDHpRO
      hSij7m80mpAXk1C0k5dpKCaCWO0WQoEotvamTRO69RSpr9gTOweX8xkMx3q3ZKHShidQJBNx
      sko7Bm2Uzo5m0gkTS34vHS4j8Xh8R0zK+uiRLvY5zbQ1aTd0LWIyXGWsNRlOq90NUNY1VXP+
      modF8Xg8mM0rE6Oz2SwqlWr1/42f3e77dDqNRqPZkM3119dtqzk3cNvzl6t9IzblXnsl594q
      7fWc7zUPi6LT6aqKTqBSqSoeT1Cr1VU3xKs5fzW2tbAX+b5xat5q3WhGLPr9AHi9HoqFHF7v
      yvtiMc/s7DzT4yP4lkNr2vrfsb2OUiFjdnZloXixkGN21k0q4sdb5ravsLHBvBu1w0rpd52Z
      mRkWPXNMzq69cP1m7WvZU8wxMzNftp6NIPL9He1ln3UTiMfjDJ//KcPN96FVJ7FbLYTDYaCd
      fDZLKBxmb3cbY3OLuOyWW2znxwf40Q/n6Tm4iyaDnfsO7Vu1z2WzhMNhpoYH0bYeo8VW28hj
      8Xgc/9ICC5NDDM2n+bWPu1heCtLVtRL3M7C8xH33Hmaqb5Ddne232vr9nPvFCSJ5O61tdh5/
      9KEb7AssLwWJ+N3MR6Gra1fNtYt8X8l3xVe+8pWv1FJgNpst25sXPXPYXJ0kE0na21xYLVbk
      shWhJnMTcrmM4PISlmYXRr22xHbJ60atM2Gx2Wjr6sZla1qxkUE8FsfcZEEugwMHD6DR6DHo
      7qxpI9rjkQCZohYZGRzONlwOO0qlYjXMn1KpIhGNoNSZsDaZSmxT0RDxPFjNFqzNLnp7dmEw
      GFfsY3EMxpXXPXvvwmLUllW1EfleWb6L2KA3ILRLw46KDVo9efovXUamNWE165HlIiQLTej0
      Goq5JEZZllF/DFeznXyuQCwSwG5pwrmrC5Vc+p77iWuDhGIZ2tqcFAoQTaTQqlUY1HLMDid9
      Z89hbW1HrywSjcdobnahM1poMmrvnPgmM3z1Mom8kja7hYJMRiIZRaOzoCjmaHUaOXNulNZ2
      J4pikXg8iqPZirm5Db369gOnW0Wl+S5pFWhNCkl8S1nIJwiHF0hE0lwanKBQzJFJJTApZVi6
      9zL85mlGfQHaHFpG+odRGJzYLXpptQPzbi9Og4x+dwRlPo1//DJTiwnCuTy9HU7iiQKZ1CKz
      I9dwZ/Qk/TMkMkVaXdXF3a+F9gWvDxWwHImQSUe4fOFtEkU5hXSKdqeJeMFCzH2FkdF55DYX
      CxOD5GRqnM02ybVXmu/bsgq05HODxoxGCZHgMgZjE/F0DrNRi0YB49Nuero78HgDmMx60vEo
      rvYuVIrqSoBaaE9GQ/gjaaxNejKJGKj0RMNh7M1WTEYDY8PDODp6iC770Gh05ItF9CZr1SVA
      LbSHA4sk8kpMWhWxaASNTks0kcVqNmIyqBkeHqeju5slnwet0UIxl6DJ3opeU11FQsp8r7kD
      pFIptFrpi/NKENqlQUrtYpdIQUOzM6ZvCgQVIhxA0NCsOsCFM6c4fvw4w8MjeMocwp4dH+TH
      r5wiW1h5P3z5LX7x1tubIlQg2AxWm+8D/f207DtGOjDHqN/PyYkx2tvace4+RGhhDPfkCL0H
      jjIzPYWjs5fHH74fm6sTZf8A/kCAVCLJ7t27OfXiK7z/ofukvCaBoGxWSwBNk5NnnnwEk05N
      MBjk6sgURq2cgStvMzHjpag20dEk443zfSz4VnaQWZ4bYTpUoJhe2RNg1r0IuTQFaa5FINgw
      q71APp8Pl8tFMhrCOzfJX/3tD3nsQ5+ix67DYLagkBVxuZzMTI6hMTtoabbic8+yFIrS3rkb
      i0nH4sIcBZWRFofYvkFQH4huUEFDI3qBBA2NcABBQ7MNZ4MKAPovXQCNCafNQjIaIClTEVr0
      odPq0RkNpBIJ9OYmVGo5iUiOFlOBs8NzWA06XE4bqZCHpK4Tm1FNb0+H1JezbREOsI3JZLJM
      jI2QScXxJuTsthUJBNNEwxn2t5iZG79M0WChWd+FqtWCXT1FJCcnMT5KLpMgRgq/0SQcYB1E
      I1jQ0FTcBhCh0KVH3IPqqdgBRCBc6RH3oHoarw2QT3D2rQGUWi2JsI+i0sTjjz0staqGY2xs
      jGtDQ+y+qwdZ3sDdB26/Ne9m0ngOUCyuBl91tHYgEy0gSVDmwnR07mIxlMdluvPxm0XFjeB6
      jkKwUxD3oHoqKgHy+fxqPEeBdIh7UD0VOYBCoUCj0WAwGMjlclXvUF5tGo2sQdyD6uxLeoES
      QT8X+y6wGNg5O6MIBOtR4gDZVIpwPEI6vX73Wj6fp1AQs/4rJZLMcs0bhfkLcO7bkEtJLakh
      CYfDpVWgJb+X+ZkF9h1Yf3hAoVCInSSr4GP/+yzjizG+pf0LnuUMyIBjvym1rB3LQirDfxp3
      84jFyOd2vRuA7OTJkzftEml30tnVQia5/q4cogQoZSE6y5de+z2+N/idso5fDd/l2A96O7Qd
      3TRtAvjHxRAn/GH+dNJT8nlPT09pCeANhnBY7Bj064epa/QSIJeLkEp5MBr3A3By6hV+7j7D
      m56zfObgF+5o/9JvvxdPKMX+lmeBOtm4ro75V04LfZE477OWDjgcO3as1AESiQRao5ZYOE6I
      GG8PTWBQ5lHpzCQzWbpdWvwxC/ccrG28+nrj4sVPEE+Mc+jQN3A5n+Hp3c9yZfEKx1ofKMve
      rFVhbtk5W8pud9q0ar5zqGfN70oc4Oixd6cELLknQaGmWEygUOuwapSEo2GSCRXxeJxcLkcu
      l6t6gzSQdnO5StK4PnJ4fWM6h7aV//Ho11AoFFu6Ud318zfiPaiVfclI8LW+NwkWZTQ799Lb
      aV/X8PooZL32/1aTRi4XfacKtE8yDbAD7sHUaXjzm/De34PuR6QfB+jZ18vCtJsm6/qTMxq9
      EaxUmkoefkGFvPlNGD0JZ78hmYQSdynkZWRyGbhDUdLojWBBjfjQC3D1ETj0cckklDzF8ZCf
      1o5WhkZn1zVq9BJAUCPMbSvVH3ObZBJKSgCtyYZeG6O9c31BogQQ7BRKnuJIaIn52Vmm5xbW
      NRIlgGCnUFICGM02Ont66e3tWtdIlACCnULpXKBlP3K5EplMRmjZx8iUB6Mqj1JrJJMrYlYX
      KWia2H2HKpJAUC+UOEAGNdnYPMFQO61WPU5nM6lYlHw+j0oGRpMZTyB+24GwyNLKNvTm5o3t
      eNiogzDVpiEGwqq3L3EAjSJPe8d+NEYtqXSUdDqDrUmP3tKCghzJaIjuni4MOjXxeHx10EGp
      VBJZ8vPdL/82AJ//2rc37ATVDuRUa1+PGuRyeck92Mpzb4a9FBpKju7ee/CGd1rM1hsfYs3q
      +tP1G8HSb1YtEJRLxUsib24Em5sdfP5r3159LRDUAxVHhQiFQqhUKtLpNBqNpuS7bDaLSqUq
      +/3NaWy2/XbQsJamjaZx/XhxDyq3r7jCpVKpMBgMqNXqWy6skrTU6vXXIGymfS3SkCofxD14
      l0ryoarO/NGhARYWlwEIBFb2DZuZmVn9fmZmBp97ltHJdz7Lxem7eJlAZGUXSo/XC0AxG8e7
      FAEgk4zgWfQzcKmPRHbtdobfv1h6EcUsbu8SAPlMknnPIiMDlwgl1lrbXGR0aIAZt7dEt8fz
      7mqhmZkZFj1zTM661zz/7OQY18anS65BpVLdcu1QYGZ67jbX4L/ls5s1UMwxMzO/pv11xD2o
      7h5U7ADF2AI5QwexoJtTPz3D8NAwBQosLwVXj1leXsLZ2orsei0rn8AfTDA59DYv//R1+i+d
      Y2h0koI8S9C3kvl5CoSWIjhsWvxrRKeIx+O8fuoUl4cH+dlPXuXK4DWyBTnhoA+AbB7CoSVc
      DhuL/sAt9oXonXUHlpdwulz4fYu32K9k3BIajYYfvfjXvH72HK+deRPWSGPk7QsMjE6veQ1+
      /xKXL7/O97/79/z89Nmb7FdeD/SdZ2jy9vOyxD2o/h78f/NaVpuWelN8AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
